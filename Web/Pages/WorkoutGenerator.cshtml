@page
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model Web.Pages.WorkoutGeneratorModel
@using Core.Models;
@{
    var user = await UserManager.GetUserAsync(User);

}
<style>
    #dataDiv {
        max-height: 200px; /* Set maximum height for the div */
        overflow-y: auto; /* Enable vertical scrolling */
        border: 1px solid #ccc; /* Optional: Add border for better visualization */
        padding: 10px; /* Optional: Add padding for better spacing */
        color:white;
    }
</style>


<div style="display:flex; justify-content: space-between;">
    <div> 
<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <style>

        h3 {
            color: white;
        }

        .ErrorMessageBox {
            background-color: white;
            color: red;
        }
    </style>
    <div class="ErrorMessageBox">
        <p>@Model.ErrorMessage</p>
    </div>

    <h3>Title for workout</h3>
    <input asp-for="@Model.InputValues.WorkoutTitle" type="text"/>
    <span asp-validation-for="@Model.InputValues.WorkoutTitle" class="text-danger"></span>

    <h3>Description for workout</h3>
    <input asp-for="@Model.InputValues.WorkoutDescription" type="text" />
    <span asp-validation-for="@Model.InputValues.WorkoutDescription" class="text-danger"></span>

    <h3>Difficulty</h3>
    <select asp-for="@Model.InputValues.DifficultyCategory">
        @foreach (var difficulty in ListValue.DifficultyCategories)
        {
            
                <option value="@difficulty">@difficulty</option>
            
        }
    </select>

    <h3>Equipment</h3>
    <select asp-for="@Model.InputValues.WorkoutEquipment">
        @foreach (var equipment in ListValue.WorkoutEquipments)
        {
           
                <option value="@equipment">@equipment</option>
            
        }
    </select>

    <h3>Type</h3>
    <select asp-for="@Model.InputValues.WorkoutType">
        @foreach (var type in ListValue.WorkoutTypes)
        {
           
                <option value="@type">@type</option>
            
        }
    </select>

    <h3>Muscle</h3>
    <select asp-for="@Model.InputValues.MuscleCategories">
        @foreach (var muscle in ListValue.MuscleCategories)
        {
            
                <option value="@muscle">@muscle</option>
            
        }
    </select>

    <h3>Workouts per week</h3> 
    <select asp-for="@Model.InputValues.AmountOfWorkouts" id="amountOfWorkouts">
        @foreach (var amount in ListValue.AmountOfWorkouts)
        {
          
                <option value="@amount">@amount</option>
            
        }
    </select>

    <h3>Exercises per workout</h3>
            <select asp-for="@Model.InputValues.AmountOfExercises" id="dynamicSelect">
                <!-- Options will be added dynamically -->
            </select>


    <button type="submit">Generate</button>
</form>
    </div>

    <div id = "dataDiv">

      
    </div>

</div>

<script>
    document.addEventListener("DOMContentLoaded", fetchData);

    function fetchData() {
        updateData();

        var selects = document.querySelectorAll('select');

        // Function to track the value change
        function trackSelectValue(select) {
            select.addEventListener('change', function () {
                // Only update data if the changed select element is not dynamicSelect
                if (select.id !== 'dynamicSelect' && select.id !== 'amountOfWorkouts') {
                   
                    updateData(); // Update data when select value changes
                }

                // if (select.id !== 'amountOfWorkouts') {
                // updateData();
                // }



                console.log(select.name + ' changed to: ' + select.value);

            });
        }

        // Loop through each select element and attach event listener
        selects.forEach(trackSelectValue);
    }

    function updateData() {
        // Get selected values from the select elements
        var difficulty = document.querySelector('select[name="InputValues.DifficultyCategory"]').value;
        var type = document.querySelector('select[name="InputValues.WorkoutType"]').value;
        var muscle = document.querySelector('select[name="InputValues.MuscleCategories"]').value;
        var equipment = document.querySelector('select[name="InputValues.WorkoutEquipment"]').value;
        var exercises = document.querySelector('select[name="InputValues.AmountOfExercises"]').value;

        fetch(`/api/exerciselist?Difficulty=${difficulty}&type=${type}&muscle=${muscle}&equipment=${equipment}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Clear previous data
                var dataDiv = document.getElementById('dataDiv');
                dataDiv.innerHTML = '';

                let updatedOptionsList = [];
                populateSelect(updatedOptionsList);
                let i = 1;
                // Handle the fetched data
                if (data.length === 0) {
                    // If no exercises found, display a message
                    dataDiv.textContent = "No exercises found with these parameters.";
                } else {
                    // If exercises found, populate the div with the data
                    data.forEach(item => {
                        populateDiv(item);
                        updatedOptionsList.push(i)
                        i++;
                    });

                    // Update the select element with the new options
                    populateSelect(updatedOptionsList);
                }
            })
            .catch(error => {
                // Handle errors
                console.error('There was a problem with the fetch operation:', error);
            });
    }

    function populateDiv(item) {
        // Assuming you have a div with the id "dataDiv" where you want to append the text
        const targetDiv = document.getElementById('dataDiv');

        // Create a new paragraph element
        const paragraph = document.createElement('p');

        // Set the text content of the paragraph to the item data
        paragraph.textContent = item.name;

        // Append the paragraph to the target div
        targetDiv.appendChild(paragraph);
    }

    function populateSelect(options) {
        var selectElement = document.getElementById("dynamicSelect");

        // Clear existing options
        selectElement.innerHTML = '';

        // Add options from the list
        options.forEach(function (option) {
            var optionElement = document.createElement("option");
            optionElement.textContent = option;
            selectElement.appendChild(optionElement);
        });
    }
</script>


